<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.shopserve.dao.RatingDao">

    <resultMap type="com.example.shopserve.entity.Rating" id="RatingMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="score" column="score" jdbcType="INTEGER"/>
        <result property="comment" column="comment" jdbcType="VARCHAR"/>
        <result property="movie_id" column="movie_id" jdbcType="INTEGER"/>
        <result property="user_id" column="user_id" jdbcType="INTEGER"/>
        <collection property="movies" javaType="list"  ofType="com.example.shopserve.entity.Movies">
            <result property="name"  column="name"  jdbcType="VARCHAR" />
            <result property="imdb_id" column="imdb_id" jdbcType="INTEGER" />
            <result property="release_time" column="release_time" jdbcType="VARCHAR"/>
            <result property="intro" column="intro" jdbcType="BIGINT"/>
            <result property="director" column="director" jdbcType="VARCHAR"/>
            <result property="writers" column="writers" jdbcType="VARCHAR"/>
            <result property="actors" column="actors" jdbcType="INTEGER"/>
            <result property="time" column="time" jdbcType="VARCHAR"/>
            <result property="genre" column="genre" jdbcType="INTEGER"/>
            <result property="genre" column="genre" jdbcType="INTEGER"/>
            <result property="avg_rating" column="avg_rating" jdbcType="INTEGER"/>

        </collection>
    </resultMap>
    <resultMap type="com.example.shopserve.entity.Rating" id="ScoreMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="score" column="score" jdbcType="INTEGER"/>
        <result property="comment" column="comment" jdbcType="VARCHAR"/>
        <result property="movie_id" column="movie_id" jdbcType="INTEGER"/>
        <result property="user_id" column="user_id" jdbcType="INTEGER"/>
        <collection property="movies" javaType="list"  ofType="com.example.shopserve.entity.Movies">
            <result property="name"  column="name"  jdbcType="VARCHAR" />
            <result property="imdb_id" column="imdb_id" jdbcType="INTEGER" />
            <result property="release_time" column="release_time" jdbcType="VARCHAR"/>
            <result property="intro" column="intro" jdbcType="BIGINT"/>
            <result property="director" column="director" jdbcType="VARCHAR"/>
            <result property="writers" column="writers" jdbcType="VARCHAR"/>
            <result property="actors" column="actors" jdbcType="INTEGER"/>
            <result property="time" column="time" jdbcType="VARCHAR"/>
            <result property="genre" column="genre" jdbcType="INTEGER"/>
            <result property="genre" column="genre" jdbcType="INTEGER"/>
            <result property="avg_rating" column="avg_rating" jdbcType="INTEGER"/>

        </collection>
    </resultMap>
    <insert id="SaveRating" keyProperty="id" useGeneratedKeys="true" parameterType="com.example.shopserve.entity.Rating">
        INSERT INTO movie_rating(score, comment, movie_id, user_id)
        VALUES (#{score}, #{comment}, #{movie_id}, #{user_id})
    </insert>
    <select id="showRatingByUserId" resultMap="RatingMap">
        SELECT a.id,a.score,a.comment,a.movie_id,a.user_id,
               b.name, b.imdb_id, b.release_time, b.intro,b.director, b.writers, b.actors, b.time,
               b.genre ,Round(c.avg_rating,2) as avg_rating
        FROM movies b
                 right join movie_rating a
                            on a.movie_id = b.id
                 left join movie_avg_rating c
                           on b.imdb_id = c.movie_id
        WHERE a.user_id=#{user_id}

    </select>

    <!--    <insert id="SaveRating" keyProperty="id" useGeneratedKeys="true">-->
<!--        insert ignore into user(name, password, email, title)-->
<!--        values ("234248","234248","234248","dsadsfdasfdassssssssssssssssss")-->
<!--    </insert>-->

    <!--查询单个-->
<!--    <select id="queryByName" resultMap="UserMap">-->
<!--        select-->
<!--            id,-->
<!--            name,-->
<!--            password,-->
<!--            email,-->
<!--            title-->
<!--        from `user`-->
<!--        where name = #{name}-->
<!--    </select>-->



</mapper>

